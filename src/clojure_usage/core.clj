(ns clojure-usage.core
  (:require [clojure.java.io :as io]
            [clojure.string :as str]
            [clojure.core.logic :as l]
            [nextjournal.clerk :as clerk]))

(defn file->symbols [f]
  (->>
   (str "(" (slurp f) ")")
   read-string
   flatten
   (filter (fn [s] (or (symbol? s) (keyword? s))))
   (map (fn [s] (if (symbol? s) (symbol (name s)) s)))))

(def interesting-symbols
  (set
    (concat
      (keys (ns-publics 'clojure.core))
      (keys (ns-publics 'clojure.string))
      (keys (ns-publics 'clojure.test))
      (keys (ns-publics 'clojure.set))
      (keys (ns-publics 'clojure.core.logic))
      '(_ fn* :require :refer :as :all))))

(defn of-interest? [s]
  (or (special-symbol? s) (interesting-symbols s)))

(defn top-usages [top src-dir]
  (->> src-dir
       io/file
       file-seq
       (filter (fn [f] (and (.isFile f) (re-matches #".*\.clj[cs]*" (str f)))))
       (map file->symbols)
       flatten
       (filter of-interest?)
       frequencies
       (sort-by second)
       reverse
       (take top)))

(defn top-omitted-usages [top src-dir]
  (->> src-dir
       io/file
       file-seq
       (filter (fn [f] (and (.isFile f) (re-matches #".*\.clj[cs]*" (str f)))))
       (map file->symbols)
       flatten
       (filter (complement of-interest?))
       frequencies
       (sort-by second)
       reverse
       (take top)))

(defn start-clerk! []
  (clerk/serve! {:browse? true :watch-paths ["notebooks"]}))

(defn stop-clerk! []
  (clerk/halt!))

(defn build-clerk! [out-path]
  (clerk/build! {:paths ["notebooks/incidents.clj"]
                 :out-path (io/file out-path "clerk")}))

(comment

  (start-clerk!)

  (->>
   ["aoc2018" "aoc2019" "aoc2020" "aoc2021" "aoc2022"]
   (map (partial str "/home/john/workspace/"))
   (map (juxt identity (partial top-usages 1000))))
  ;; => (["/home/john/workspace/aoc2018"
  ;;      ([map 53]
  ;;       [defn 45]
  ;;       [->> 33]
  ;;       [is 29]
  ;;       [fn* 25]
  ;;       [= 25]
  ;;       [deftest 17]
  ;;       [first 17]
  ;;       [count 14]
  ;;       [fn 11]
  ;;       [filter 10]
  ;;       [let 10]
  ;;       [range 10]
  ;;       [+ 9]
  ;;       [second 8]
  ;;       [nil? 7]
  ;;       [ns 7]
  ;;       [concat 7]
  ;;       [rest 7]
  ;;       [split 6]
  ;;       [group-by 6]
  ;;       [remove 6]
  ;;       [reduce 6]
  ;;       [and 5]
  ;;       [str 5]
  ;;       [trim 4]
  ;;       [assoc 4]
  ;;       [apply 4]
  ;;       [inc 4]
  ;;       [re-matches 4]
  ;;       [for 4]
  ;;       [flatten 4]
  ;;       [partition 4]
  ;;       [or 4]
  ;;       [:require 4]
  ;;       [identity 4]
  ;;       [:as 4]
  ;;       [<= 4]
  ;;       [take 4]
  ;;       [complement 3]
  ;;       [comment 3]
  ;;       [as-> 3]
  ;;       [sort 3]
  ;;       [reverse 3]
  ;;       [dec 3]
  ;;       [:refer 2]
  ;;       [repeat 2]
  ;;       [max 2]
  ;;       [list 2]
  ;;       [partial 2]
  ;;       [partition-all 2]
  ;;       [loop 2]
  ;;       [not 2]
  ;;       [- 2]
  ;;       [:all 2]
  ;;       [int 2]
  ;;       [not= 2]
  ;;       [empty? 2]
  ;;       [into 2]
  ;;       [-> 2]
  ;;       [* 2]
  ;;       [join 2]
  ;;       [map-invert 2]
  ;;       [< 2]
  ;;       [last 2]
  ;;       [take-last 2]
  ;;       [set 2]
  ;;       [seq 2]
  ;;       [blank? 1]
  ;;       [not-any? 1]
  ;;       [compare 1]
  ;;       [keys 1]
  ;;       [>= 1]
  ;;       [re-find 1]
  ;;       [split-at 1]
  ;;       [zero? 1]
  ;;       [memoize 1]
  ;;       [reductions 1]
  ;;       [prn 1]
  ;;       [vec 1]
  ;;       [cycle 1]
  ;;       [get 1]
  ;;       [conj 1]
  ;;       [min 1]
  ;;       [zipmap 1]
  ;;       [pmap 1]
  ;;       [doseq 1]
  ;;       [pos? 1]
  ;;       [testing 1]
  ;;       [cons 1]
  ;;       [comp 1]
  ;;       [char 1]
  ;;       [boolean? 1]
  ;;       [boolean 1]
  ;;       [doall 1]
  ;;       [slurp 1]
  ;;       [iterate 1]
  ;;       [sort-by 1])]
  ;;     ["/home/john/workspace/aoc2019"
  ;;      ([= 77]
  ;;       [defn 69]
  ;;       [first 35]
  ;;       [->> 33]
  ;;       [is 33]
  ;;       [testing 32]
  ;;       [let 27]
  ;;       [+ 26]
  ;;       [map 23]
  ;;       [_ 20]
  ;;       [deftest 18]
  ;;       [ns 18]
  ;;       [-> 18]
  ;;       [count 17]
  ;;       [are 17]
  ;;       [:refer 16]
  ;;       [:require 16]
  ;;       [* 16]
  ;;       [second 15]
  ;;       [nil? 13]
  ;;       [range 13]
  ;;       [last 13]
  ;;       [str 12]
  ;;       [partial 12]
  ;;       [:all 12]
  ;;       [:as 12]
  ;;       [comp 12]
  ;;       [comment 11]
  ;;       [fn* 11]
  ;;       [apply 10]
  ;;       [repeat 9]
  ;;       [set 9]
  ;;       [for 8]
  ;;       [filter 7]
  ;;       [- 7]
  ;;       [remove 7]
  ;;       [cons 7]
  ;;       [val 6]
  ;;       [vec 6]
  ;;       [get 6]
  ;;       [rest 6]
  ;;       [trim 5]
  ;;       [assoc 5]
  ;;       [list 5]
  ;;       [split 5]
  ;;       [case 4]
  ;;       [take 4]
  ;;       [sort-by 4]
  ;;       [and 3]
  ;;       [max 3]
  ;;       [partition 3]
  ;;       [vector 3]
  ;;       [/ 3]
  ;;       [zero? 3]
  ;;       [index 3]
  ;;       [biginteger 3]
  ;;       [sort 3]
  ;;       [join 3]
  ;;       [slurp 3]
  ;;       [reduce 3]
  ;;       [compare 2]
  ;;       [difference 2]
  ;;       [abs 2]
  ;;       [inc 2]
  ;;       [frequencies 2]
  ;;       [cond 2]
  ;;       [drop 2]
  ;;       [some 2]
  ;;       [time 2]
  ;;       [mod 2]
  ;;       [group-by 2]
  ;;       [int 2]
  ;;       [conj 2]
  ;;       [intersection 2]
  ;;       [<= 2]
  ;;       [if-not 2]
  ;;       [mapcat 2]
  ;;       [dec 2]
  ;;       [keys 1]
  ;;       [>= 1]
  ;;       [vals 1]
  ;;       [*' 1]
  ;;       [println 1]
  ;;       [or 1]
  ;;       [reductions 1]
  ;;       [concat 1]
  ;;       [bigint 1]
  ;;       [replace 1]
  ;;       [not= 1]
  ;;       [empty? 1]
  ;;       [fn 1]
  ;;       [into 1]
  ;;       [take-while 1]
  ;;       [inc' 1]
  ;;       [< 1]
  ;;       [juxt 1]
  ;;       [union 1]
  ;;       [seq? 1]
  ;;       [every? 1]
  ;;       [+' 1])]
  ;;     ["/home/john/workspace/aoc2020"
  ;;      ([defn 153]
  ;;       [map 93]
  ;;       [->> 86]
  ;;       [count 59]
  ;;       [first 54]
  ;;       [let 44]
  ;;       [fn* 43]
  ;;       [filter 36]
  ;;       [+ 34]
  ;;       [reduce 33]
  ;;       [range 30]
  ;;       [ns 28]
  ;;       [= 28]
  ;;       [comment 25]
  ;;       [:as 24]
  ;;       [- 22]
  ;;       [fn 22]
  ;;       [:require 22]
  ;;       [-> 22]
  ;;       [* 22]
  ;;       [dec 22]
  ;;       [partial 21]
  ;;       [set 19]
  ;;       [trim 18]
  ;;       [inc 18]
  ;;       [for 18]
  ;;       [second 18]
  ;;       [str 17]
  ;;       [split-lines 17]
  ;;       [concat 16]
  ;;       [apply 14]
  ;;       [nth 14]
  ;;       [:refer 13]
  ;;       [:all 13]
  ;;       [remove 13]
  ;;       [comp 13]
  ;;       [iterate 13]
  ;;       [split 12]
  ;;       [take 12]
  ;;       [last 12]
  ;;       [get-in 10]
  ;;       [max 10]
  ;;       [identity 10]
  ;;       [partition 9]
  ;;       [case 8]
  ;;       [re-matches 8]
  ;;       [not= 8]
  ;;       [rest 8]
  ;;       [boolean 8]
  ;;       [replace 7]
  ;;       [vec 7]
  ;;       [empty? 7]
  ;;       [<= 7]
  ;;       [reverse 7]
  ;;       [parse-long 6]
  ;;       [repeat 6]
  ;;       [flatten 6]
  ;;       [name 6]
  ;;       [cons 6]
  ;;       [join 6]
  ;;       [cond 5]
  ;;       [partition-by 5]
  ;;       [group-by 5]
  ;;       [min 5]
  ;;       [sort 5]
  ;;       [slurp 5]
  ;;       [drop-while 4]
  ;;       [abs 4]
  ;;       [zero? 4]
  ;;       [cycle 4]
  ;;       [conj 4]
  ;;       [seq 4]
  ;;       [assoc 3]
  ;;       [/ 3]
  ;;       [nil? 3]
  ;;       [deftest 3]
  ;;       [_ 3]
  ;;       [when 3]
  ;;       [take-while 3]
  ;;       [testing 3]
  ;;       [sort-by 3]
  ;;       [and 2]
  ;;       [char-array 2]
  ;;       [odd? 2]
  ;;       [successful? 2]
  ;;       [not 2]
  ;;       [val 2]
  ;;       [or 2]
  ;;       [> 2]
  ;;       [into 2]
  ;;       [get 2]
  ;;       [run 2]
  ;;       [interleave 2]
  ;;       [intersection 2]
  ;;       [juxt 2]
  ;;       [take-last 2]
  ;;       [are 2]
  ;;       [difference 1]
  ;;       [hash-map 1]
  ;;       [keyword 1]
  ;;       [keys 1]
  ;;       [>= 1]
  ;;       [vals 1]
  ;;       [update 1]
  ;;       [ffirst 1]
  ;;       [mod 1]
  ;;       [prn 1]
  ;;       [is 1]
  ;;       [int 1]
  ;;       [map-indexed 1]
  ;;       [re-seq 1]
  ;;       [< 1]
  ;;       [union 1])]
  ;;     ["/home/john/workspace/aoc2021"
  ;;      ([= 113]
  ;;       [defn 106]
  ;;       [map 85]
  ;;       [->> 77]
  ;;       [is 76]
  ;;       [deftest 58]
  ;;       [first 57]
  ;;       [:refer 53]
  ;;       [:all 53]
  ;;       [fn* 50]
  ;;       [let 37]
  ;;       [ns 36]
  ;;       [:require 36]
  ;;       [count 35]
  ;;       [filter 34]
  ;;       [fn 32]
  ;;       [second 26]
  ;;       [str 24]
  ;;       [inc 23]
  ;;       [range 23]
  ;;       [testing 20]
  ;;       [reduce 20]
  ;;       [are 19]
  ;;       [+ 18]
  ;;       [split 18]
  ;;       [comment 17]
  ;;       [comp 17]
  ;;       [:as 14]
  ;;       [for 13]
  ;;       [set 13]
  ;;       [int 12]
  ;;       [<= 12]
  ;;       [mapcat 12]
  ;;       [* 11]
  ;;       [rest 11]
  ;;       [constantly 10]
  ;;       [nth 10]
  ;;       [group-by 10]
  ;;       [dec 10]
  ;;       [last 10]
  ;;       [chars 9]
  ;;       [vals 9]
  ;;       [- 9]
  ;;       [remove 9]
  ;;       [abs 8]
  ;;       [mapv 8]
  ;;       [concat 8]
  ;;       [_ 8]
  ;;       [into 8]
  ;;       [-> 8]
  ;;       [/ 7]
  ;;       [partition 6]
  ;;       [memoize 6]
  ;;       [prn 6]
  ;;       [< 6]
  ;;       [take 6]
  ;;       [not-any? 5]
  ;;       [case 5]
  ;;       [empty? 5]
  ;;       [sort 5]
  ;;       [join 5]
  ;;       [parse-long 4]
  ;;       [trim 4]
  ;;       [complement 4]
  ;;       [max 4]
  ;;       [next 4]
  ;;       [keyword 4]
  ;;       [frequencies 4]
  ;;       [keys 4]
  ;;       [partial 4]
  ;;       [cond 4]
  ;;       [val 4]
  ;;       [update 4]
  ;;       [nil? 4]
  ;;       [or 4]
  ;;       [identity 4]
  ;;       [assoc 3]
  ;;       [apply 3]
  ;;       [re-matches 3]
  ;;       [partition-by 3]
  ;;       [when 3]
  ;;       [index 3]
  ;;       [get 3]
  ;;       [conj 3]
  ;;       [reverse 3]
  ;;       [juxt 3]
  ;;       [slurp 3]
  ;;       [iterate 3]
  ;;       [every? 3]
  ;;       [seq 3]
  ;;       [blank? 2]
  ;;       [flatten 2]
  ;;       [vector 2]
  ;;       [drop 2]
  ;;       [zero? 2]
  ;;       [reductions 2]
  ;;       [not= 2]
  ;;       [cycle 2]
  ;;       [pos? 2]
  ;;       [sort-by 2]
  ;;       [get-in 1]
  ;;       [and 1]
  ;;       [odd? 1]
  ;;       [loop 1]
  ;;       [hash-set 1]
  ;;       [split-lines 1]
  ;;       [mod 1]
  ;;       [keyword? 1]
  ;;       [> 1]
  ;;       [take-while 1]
  ;;       [pmap 1]
  ;;       [shuffle 1]
  ;;       [merge-with 1]
  ;;       [cons 1])]
  ;;     ["/home/john/workspace/aoc2022"
  ;;      ([defn 33]
  ;;       [map 30]
  ;;       [is 23]
  ;;       [->> 19]
  ;;       [= 18]
  ;;       [deftest 17]
  ;;       [:as 17]
  ;;       [ns 12]
  ;;       [:require 12]
  ;;       [reduce 12]
  ;;       [fn 11]
  ;;       [+ 10]
  ;;       [:refer 7]
  ;;       [:all 7]
  ;;       [count 6]
  ;;       [comment 6]
  ;;       [dec 6]
  ;;       [set 6]
  ;;       [str 5]
  ;;       [inc 5]
  ;;       [/ 5]
  ;;       [nth 5]
  ;;       [let 5]
  ;;       [range 5]
  ;;       [apply 4]
  ;;       [pair 4]
  ;;       [blank? 3]
  ;;       [parse-long 3]
  ;;       [filter 3]
  ;;       [split 3]
  ;;       [partition 3]
  ;;       [>= 3]
  ;;       [not 3]
  ;;       [int 3]
  ;;       [<= 3]
  ;;       [reverse 3]
  ;;       [rest 3]
  ;;       [first 3]
  ;;       [and 2]
  ;;       [complement 2]
  ;;       [partial 2]
  ;;       [drop-last 2]
  ;;       [vector 2]
  ;;       [concat 2]
  ;;       [remove 2]
  ;;       [intersection 2]
  ;;       [testing 2]
  ;;       [sort 2]
  ;;       [seq 2]
  ;;       [are 2]
  ;;       [drop-while 1]
  ;;       [assoc 1]
  ;;       [odd? 1]
  ;;       [re-matches 1]
  ;;       [cond 1]
  ;;       [partition-by 1]
  ;;       [assert 1]
  ;;       [nil? 1]
  ;;       [zero? 1]
  ;;       [or 1]
  ;;       [split-lines 1]
  ;;       [_ 1]
  ;;       [> 1]
  ;;       [when 1]
  ;;       [vec 1]
  ;;       [into 1]
  ;;       [identity 1]
  ;;       [take-while 1]
  ;;       [shuffle 1]
  ;;       [comp 1]
  ;;       [join 1]
  ;;       [char 1]
  ;;       [take 1]
  ;;       [last 1]
  ;;       [slurp 1]
  ;;       [take-nth 1]
  ;;       [take-last 1])])

  (->>
   ["aoc2018" "aoc2019" "aoc2020" "aoc2021" "aoc2022"]
   (map (partial str "/home/john/workspace/"))
   (map (juxt identity (partial top-omitted-usages 50))))

;
  )


